(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{317:function(e,t,r){"use strict";r.r(t);var i=r(82),a=r.n(i),n=r(113),s=r(26),d=r(42),u=r(10),f=r(114);r(980);t.default=function(e){e.abilities[28]=[{triggerFunc:function(){return this.isUpgraded()?"onStartPhase onDamage":"onStartPhase"},_defenseBuff:0,_maxDefenseBuff:40,_damageTaken:!1,_getDefenseBuff:function(e){return this._defenseBuff>=39?this._defenseBuff=40:this.isUpgraded()&&!this._damageTaken?this._defenseBuff+=2:this._defenseBuff+=1,this._defenseBuff},require:function(e){return!e||(this._damageTaken=!0,!1)},activate:function(){this.creature.replaceEffect(new f.a("Tankish Build",this.creature,this.creature,"",{alterations:{defense:this._getDefenseBuff(this._defenseBuff)},stackable:!1},e)),this._damageTaken=!1}},{trigger:"onQuery",_targetTeam:s.a.enemy,_upgradedMap:[[0,1,0,0,0,1,0,0],[0,0,1,0,0,1,0,0],[0,0,1,0,1,0,0,0],[1,1,1,0,0,1,1,1],[0,0,1,0,1,0,0,0],[0,0,1,0,0,1,0,0],[0,1,0,0,0,1,0,0]],require:function(){var e={team:this._targetTeam,sourceCreature:this.creature,distance:3};return!(!this.testRequirements()||!this.testDirection(e))},query:function(){var t=this.creature,r=this;this.isUpgraded()?(this._upgradedMap.origin=[3,3],e.grid.queryCreature({fnOnConfirm:function(){r.animation.apply(r,arguments)},team:this._targetTeam,id:t.id,flipped:t.flipped,hexes:t.getHexMap(this._upgradedMap)})):e.grid.queryDirection({fnOnConfirm:function(){r.animation.apply(r,arguments)},flipped:t.flipped,team:this._targetTeam,id:t.id,requireCreature:!0,x:t.x,y:t.y,distance:3,sourceCreature:t})},activate:function(t){this.end(),this.isUpgraded()||(t=u.d(t).creature);var r=new n.a(this.creature,this.damages,1,[],e);t.takeDamage(r)}},{trigger:"onQuery",_req:{team:s.a.both,directions:[0,1,0,0,1,0],distance:1},_directions:[0,0,0,0,0,0],_getDashed:function(t){var r,i=this.creature;if(t[4])if(t[1]){var a=e.grid.getHexMap(i.x,i.y,0,i.player.flipped,d.q),n=e.grid.getHexMap(i.x,i.y,0,!i.player.flipped,d.q);r=a.concat(n)}else r=e.grid.getHexMap(i.x,i.y,0,!i.player.flipped,d.q);else r=e.grid.getHexMap(i.x,i.y,0,i.player.flipped,d.q);return r},_getTarget:function(t){var r=this.creature,i=r.player.flipped?r.x-2:r.x+1,n=r.player.flipped?r.x+1:r.x-2,s=[];return t[4]?t[1]?(s.push.apply(s,a()(this._getCreature(e.grid.getHexLine(i,r.y,1,r.player.flipped)))),s.push.apply(s,a()(this._getCreature(e.grid.getHexLine(n,r.y,4,r.player.flipped))))):s.push.apply(s,a()(this._getCreature(e.grid.getHexLine(n,r.y,4,r.player.flipped)))):s.push.apply(s,a()(this._getCreature(e.grid.getHexLine(i,r.y,1,r.player.flipped)))),s},_getCreature:function(t){for(var r=[],i=0,a=0;i<t.length&&a<2;){var n=t[i].creature;if(void 0!==n){for(var s=0;s<n.size;s++)r.push(e.grid.hexes[n.y][n.x-s]);i+=n.size,a=0}else i++,a++}return r},_checkEnd:function(){var t,r=this.creature,i=this.testDirections(this._req);this._directions=[0,0,0,0,0,0];var a=r.player.flipped?r.x-2:r.x+1,n=r.player.flipped?r.x+1:r.x-2;if(i[4])if(i[1]){var s=e.grid.getHexLine(a,r.y,1,r.player.flipped),d=e.grid.getHexLine(n,r.y,4,r.player.flipped);this._getHole(s)&&(this._directions[1]=1),this._getHole(d)&&(this._directions[4]=1)}else t=e.grid.getHexLine(n,r.y,4,r.player.flipped),this._getHole(t)&&(this._directions=i);else t=e.grid.getHexLine(a,r.y,1,r.player.flipped),this._getHole(t)&&(this._directions=i)},_getHole:function(e){for(var t=0,r=0;t<e.length&&r<2;)void 0===e[t].creature?r++:r=0,t++;return r>=2},require:function(){return this._req.sourceCreature=this.creature,this._checkEnd(),!(!this.testRequirements()||!this._directions[1]&&!this._directions[4])},query:function(){var t=this,r=this.creature,i=t._directions,a=t._getDashed(i),n=t._getTarget(i),d=[];i[1]&&i[4]&&(d=n.filter((function(e){return e.x<r.x}))).forEach((function(e){n.splice(n.findIndex((function(t){return t.coord===e.coord})),1)})),e.grid.queryChoice({fnOnConfirm:function(){t.animation.apply(t,arguments)},team:s.a.both,requireCreature:0,id:r.id,flipped:r.flipped,choices:[n,d],hexesDashed:a})},activate:function(t){var r=this,i=this.creature,a=0;r.end();var s=r.getTargets(t),d=s[s.length-1].target,u=null;for(console.log(s),a=0;a<s.length;a++){for(var f=s[a].target,c=new n.a(r.creature,r.damages,1,[],e),p=0;p<f.size&&(f.takeDamage(c),!0!==f.dead);p++);if(!r.isUpgraded()&&!0===f.dead&&(f.size>1||void 0===e.grid.hexes[f.y][f.x-1].creature||void 0===e.grid.hexes[f.y][f.x+1].creature)){a>0?d=s[a-1].target:(d=f,u=0);break}}null===u&&(u=d.x>=i.x?2:-d.size),r.creature.moveTo(e.grid.hexes[i.y][d.x+u],{ignoreMovementPoint:!0,ignorePath:!0,callback:function(){e.Phaser.camera.shake(.02,100,!0,e.Phaser.camera.SHAKE_VERTICAL,!0),e.onStepIn(r.creature,r.creature.hexagons[0]);var t=setInterval((function(){e.freezedInput||(clearInterval(t),e.UI.selectAbility(-1),e.activeCreature.queryMove())}),100)}})}},{trigger:"onQuery",map:[[0,0,1,0],[0,0,1,1],[0,1,1,0],[0,0,1,1],[0,0,1,0]],require:function(){return this.testRequirements()},query:function(){var t=this,r=this.creature;this.map.origin=[0,2],e.grid.queryChoice({fnOnConfirm:function(){t.animation.apply(t,arguments)},team:s.a.both,requireCreature:0,id:r.id,flipped:r.flipped,choices:[r.getHexMap(this.map),r.getHexMap(this.map,!0)]})},activate:function(t){var r=this,i=this;i.end();for(var a=i.getTargets(t),n=function(t){var n=a[t].target;i.isUpgraded()&&(n.delayed||n.findEffect("Earth Shaker").length>0)?(n.dizzy=!0,n.removeEffect("Earth Shaker")):(n.delay(!1),n.addEffect(new f.a("Earth Shaker",r.creature,n,"onStartPhase",{effectFn:function(){n.delayed=!0,n.delayable=!1},deleteTrigger:"onEndPhase",turnLifetime:1,stackable:!1},e)))},s=0;s<a.length;s++)n(s)}}]}},980:function(e,t,r){"use strict";function i(e,t,r){var i;return t>1&&(t=1),t<-1&&(t=-1),0===r?i=1===t?1:4:(e%2==0&&t<1&&t++,i=1===t?-1===r?0:2:1===r?3:5),i}r.d(t,"a",(function(){return i}))}}]);