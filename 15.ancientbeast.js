(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{315:function(e,t,a){"use strict";a.r(t);var r=a(0),i=a(113),n=a(26),s=a(42),o=a(10),u=a(114);t.default=function(e){e.abilities[44]=[{movementType:function(){return"flying"},trigger:"",require:function(){return!0},activate:function(){}},{trigger:"onQuery",_targetTeam:n.a.enemy,require:function(){return!!this.testRequirements()&&!!this.atLeastOneTarget(this.creature.getHexMap(s.i),{team:this._targetTeam})},query:function(){var t=this;e.grid.queryCreature({fnOnConfirm:function(){t.animation.apply(t,arguments)},team:this._targetTeam,id:this.creature.id,flipped:this.creature.flipped,hexes:this.creature.getHexMap(s.i)})},activate:function(t){if(this.end(),this.isUpgraded()){var a=new u.a("Slicing Pounce",this.creature,t,"onDamage",{alterations:{offense:-1}},e);t.addEffect(a),e.log("%CreatureName"+t.id+"%'s offense is lowered by 1")}var r=new i.a(this.creature,this.damages,1,[],e);t.takeDamage(r)}},{trigger:"onQuery",_targetTeam:n.a.both,require:function(){if(!this.testRequirements())return!1;var e=this,t=this.creature,a=t.getHexMap(s.p);if(a.length<2)return!1;if(a[0].creature&&a[1].creature)return!1;if(a=a.filter((function(t){return!!t.creature&&(t.creature.size<3||e.isUpgraded())})),!this.atLeastOneTarget(a,{team:this._targetTeam}))return!1;var r=a[0].creature||a[1].creature;return r.stats.moveable?!(t.remainingMove<r.size)||(this.message="Not enough movement points.",!1):(this.message="Target is not moveable.",!1)},query:function(){var t=this,a=this.creature,r=a.getHexMap(s.p),i=r[0].creature||r[1].creature,n=Math.floor(a.remainingMove/i.size),o=a.size+i.size,u=e.grid.getHexMap(a.x-s.o.origin[0],a.y-s.o.origin[1],0,!1,s.o)[0].creature==i,g=u?a.x+i.size:a.x;e.grid.queryHexes({fnOnConfirm:function(){t.animation.apply(t,arguments)},fnOnSelect:function(t){for(var r=0;r<i.hexagons.length;r++)e.grid.cleanHex(i.hexagons[r]),i.hexagons[r].displayVisualState("dashed");for(var n=0;n<a.hexagons.length;n++)e.grid.cleanHex(a.hexagons[n]),a.hexagons[n].overlayVisualState("hover h_player"+a.team);for(var s=0;s<o;s++)if(e.grid.hexExists(t.y,t.x-s)){var g=e.grid.hexes[t.y][t.x-s],c=void 0;c=u?s<i.size?i.team:a.team:s>1?i.team:a.team,e.grid.cleanHex(g),g.overlayVisualState("active creature player"+c),g.displayVisualState("creature player"+c)}},team:this._targetTeam,id:[a.id,i.id],size:o,flipped:a.player.flipped,hexes:e.grid.getFlyingRange(g,a.y,n,o,[a.id,i.id]).filter((function(e){return a.y==e.y&&(u?e.x<g:e.x>g-a.size-i.size+1)})),args:{trg:i.id,trgIsInfront:u},callbackAfterQueryHexes:function(){for(var t=0;t<i.hexagons.length;t++)e.grid.cleanHex(i.hexagons[t]),i.hexagons[t].displayVisualState("dashed")},fillHexOnHover:!1})},activate:function(t,a){var r=this;r.end();for(var i=this.creature,n=e.creatures[a.trg],s=a.trgIsInfront,u=e.grid.hexes[t.y][s?t.x-n.size:t.x],g=e.grid.hexes[t.y][s?t.x:t.x-i.size],c=0,d=0,f=e.grid.hexes[i.y][i.x];!c;)d++,o.c(f.adjacentHex(d),u)&&(c=d);i.remainingMove-=c*n.size,i.moveTo(u,{animation:"fly",callback:function(){n.updateHex()},ignoreMovementPoint:!0}),n.moveTo(g,{animation:"fly",callback:function(){r.creature.updateHex(),r.creature.queryMove()},ignoreMovementPoint:!0,overrideSpeed:i.animation.walk_speed})}},{trigger:"onQuery",_targetTeam:n.a.enemy,require:function(){return!!this.testRequirements()&&!!this.atLeastOneTarget(this.creature.getHexMap(s.i),{team:this._targetTeam})},query:function(){var t=this;e.grid.queryCreature({fnOnConfirm:function(){t.animation.apply(t,arguments)},team:this._targetTeam,id:this.creature.id,flipped:this.creature.flipped,hexes:this.creature.getHexMap(s.i)})},activate:function(t){var a=this;a.end();var n=r.extend({},a.damages);this.isUpgraded()||delete n.poison;var s=new i.a(a.creature,n,1,[],e);if("Shielded"!==t.takeDamage(s).damageObj.status){var o=new u.a(this.title,this.creature,t,"onStartPhase",{stackable:!1,effectFn:function(t,r){e.log("%CreatureName"+r.id+"% is affected by "+a.title),r.takeDamage(new i.a(t.owner,{poison:a.damages.poison},1,[],e),{isFromTrap:!0})}},e);t.replaceEffect(o),e.log("%CreatureName"+t.id+"% is poisoned by "+this.title)}e.UI.checkAbilities()}}]}}}]);